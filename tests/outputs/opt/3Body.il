fn sqrt_newton(x) {
  if (x == 0) {
    return 0.0;
  }
  let g;
  g = x * 1.0;
  let i;
  i = 0;
  while (i < 12) {
    __t0 = x / g;
    __t1 = g + __t0;
    g = 0.5 * __t1;
    i = i + 1;
  }
  return g;
}
let steps;
steps = 5000;
let e;
let _inl_p1;
_inl_p1 = steps;
let _inl_v2;
_inl_v2 = 1.0;
let _inl_v3;
_inl_v3 = 0.01;
let _inl_v4;
_inl_v4 = -1.0;
let _inl_v5;
_inl_v5 = 0.0;
let _inl_v6;
_inl_v6 = 0.0;
let _inl_v7;
_inl_v7 = 0.5;
let _inl_v8;
_inl_v8 = 1.0;
let _inl_v9;
_inl_v9 = 1.0;
let _inl_v10;
_inl_v10 = 0.0;
let _inl_v11;
_inl_v11 = 0.0;
let _inl_v12;
let _cse34;
_cse34 = -0.5;
_inl_v12 = _cse34;
let _inl_v13;
_inl_v13 = 1.0;
let _inl_v14;
_inl_v14 = 0.0;
let _inl_v15;
_inl_v15 = 0.5;
let _inl_v16;
_inl_v16 = _cse34;
let _inl_v17;
_inl_v17 = 0.0;
let _inl_v18;
_inl_v18 = 1.0;
let _inl_v19;
_inl_v19 = 0;
while (_inl_v19 < _inl_p1) {
  let _inl_v20;
  _inl_v20 = 0.0;
  let _inl_v21;
  _inl_v21 = 0.0;
  let _inl_v22;
  _inl_v22 = 0.0;
  let _inl_v23;
  _inl_v23 = 0.0;
  let _inl_v24;
  _inl_v24 = 0.0;
  let _inl_v25;
  _inl_v25 = 0.0;
  let _inl_v26;
  _inl_v26 = _inl_v9 - _inl_v4;
  let _inl_v27;
  _inl_v27 = _inl_v10 - _inl_v5;
  let _inl_v28;
  __t2 = _inl_v26 * _inl_v26;
  __t3 = _inl_v27 * _inl_v27;
  _inl_v28 = __t2 + __t3;
  let _inl_v29;
  __t4 = sqrt_newton(_inl_v28);
  _inl_v29 = 1.0 / __t4;
  let _inl_v30;
  __t5 = _inl_v29 * _inl_v29;
  _inl_v30 = __t5 * _inl_v29;
  let _inl_v31;
  _inl_v31 = _inl_v2 * _inl_v30;
  __t6 = _inl_v31 * _inl_v13;
  __t7 = __t6 * _inl_v26;
  _inl_v20 = _inl_v20 + __t7;
  __t8 = _inl_v31 * _inl_v13;
  __t9 = __t8 * _inl_v27;
  _inl_v21 = _inl_v21 + __t9;
  __t10 = _inl_v31 * _inl_v8;
  __t11 = __t10 * _inl_v26;
  _inl_v22 = _inl_v22 - __t11;
  __t12 = _inl_v31 * _inl_v8;
  __t13 = __t12 * _inl_v27;
  _inl_v23 = _inl_v23 - __t13;
  _inl_v26 = _inl_v14 - _inl_v4;
  _inl_v27 = _inl_v15 - _inl_v5;
  __t14 = _inl_v26 * _inl_v26;
  __t15 = _inl_v27 * _inl_v27;
  _inl_v28 = __t14 + __t15;
  __t16 = sqrt_newton(_inl_v28);
  _inl_v29 = 1.0 / __t16;
  __t17 = _inl_v29 * _inl_v29;
  _inl_v30 = __t17 * _inl_v29;
  _inl_v31 = _inl_v2 * _inl_v30;
  __t18 = _inl_v31 * _inl_v18;
  __t19 = __t18 * _inl_v26;
  _inl_v20 = _inl_v20 + __t19;
  __t20 = _inl_v31 * _inl_v18;
  __t21 = __t20 * _inl_v27;
  _inl_v21 = _inl_v21 + __t21;
  let _cse36;
  _cse36 = _inl_v31 * _inl_v8;
  __t22 = _cse36;
  __t23 = __t22 * _inl_v26;
  _inl_v24 = _inl_v24 - __t23;
  __t24 = _cse36;
  __t25 = __t24 * _inl_v27;
  _inl_v25 = _inl_v25 - __t25;
  _inl_v26 = _inl_v14 - _inl_v9;
  _inl_v27 = _inl_v15 - _inl_v10;
  __t26 = _inl_v26 * _inl_v26;
  __t27 = _inl_v27 * _inl_v27;
  _inl_v28 = __t26 + __t27;
  __t28 = sqrt_newton(_inl_v28);
  _inl_v29 = 1.0 / __t28;
  __t29 = _inl_v29 * _inl_v29;
  _inl_v30 = __t29 * _inl_v29;
  _inl_v31 = _inl_v2 * _inl_v30;
  let _cse35;
  _cse35 = _inl_v31 * _inl_v18;
  __t30 = _cse35;
  __t31 = __t30 * _inl_v26;
  _inl_v22 = _inl_v22 + __t31;
  __t32 = _cse35;
  __t33 = __t32 * _inl_v27;
  _inl_v23 = _inl_v23 + __t33;
  let _cse37;
  _cse37 = _inl_v31 * _inl_v13;
  __t34 = _cse37;
  __t35 = __t34 * _inl_v26;
  _inl_v24 = _inl_v24 - __t35;
  __t36 = _cse37;
  __t37 = __t36 * _inl_v27;
  _inl_v25 = _inl_v25 - __t37;
  __t38 = _inl_v3 * _inl_v20;
  __t39 = __t38 / _inl_v8;
  _inl_v6 = _inl_v6 + __t39;
  __t40 = _inl_v3 * _inl_v21;
  __t41 = __t40 / _inl_v8;
  _inl_v7 = _inl_v7 + __t41;
  __t42 = _inl_v3 * _inl_v22;
  __t43 = __t42 / _inl_v13;
  _inl_v11 = _inl_v11 + __t43;
  __t44 = _inl_v3 * _inl_v23;
  __t45 = __t44 / _inl_v13;
  _inl_v12 = _inl_v12 + __t45;
  __t46 = _inl_v3 * _inl_v24;
  __t47 = __t46 / _inl_v18;
  _inl_v16 = _inl_v16 + __t47;
  __t48 = _inl_v3 * _inl_v25;
  __t49 = __t48 / _inl_v18;
  _inl_v17 = _inl_v17 + __t49;
  __t50 = _inl_v3 * _inl_v6;
  _inl_v4 = _inl_v4 + __t50;
  __t51 = _inl_v3 * _inl_v7;
  _inl_v5 = _inl_v5 + __t51;
  __t52 = _inl_v3 * _inl_v11;
  _inl_v9 = _inl_v9 + __t52;
  __t53 = _inl_v3 * _inl_v12;
  _inl_v10 = _inl_v10 + __t53;
  __t54 = _inl_v3 * _inl_v16;
  _inl_v14 = _inl_v14 + __t54;
  __t55 = _inl_v3 * _inl_v17;
  _inl_v15 = _inl_v15 + __t55;
  _inl_v19 = _inl_v19 + 1;
}
let _inl_v32;
__t56 = 0.5 * _inl_v8;
__t57 = _inl_v6 * _inl_v6;
__t58 = _inl_v7 * _inl_v7;
__t59 = __t57 + __t58;
__t60 = __t56 * __t59;
__t61 = 0.5 * _inl_v13;
__t62 = _inl_v11 * _inl_v11;
__t63 = _inl_v12 * _inl_v12;
__t64 = __t62 + __t63;
__t65 = __t61 * __t64;
__t66 = __t60 + __t65;
__t67 = 0.5 * _inl_v18;
__t68 = _inl_v16 * _inl_v16;
__t69 = _inl_v17 * _inl_v17;
__t70 = __t68 + __t69;
__t71 = __t67 * __t70;
_inl_v32 = __t66 + __t71;
let _inl_v26;
_inl_v26 = _inl_v9 - _inl_v4;
let _inl_v27;
_inl_v27 = _inl_v10 - _inl_v5;
let _inl_v33;
__t72 = -_inl_v2;
__t73 = __t72 * _inl_v8;
__t74 = __t73 * _inl_v13;
__t75 = _inl_v26 * _inl_v26;
__t76 = _inl_v27 * _inl_v27;
__t77 = sqrt_newton(__t75 + __t76);
_inl_v33 = __t74 / __t77;
_inl_v26 = _inl_v14 - _inl_v4;
_inl_v27 = _inl_v15 - _inl_v5;
__t78 = _inl_v2 * _inl_v8;
__t79 = __t78 * _inl_v18;
__t80 = _inl_v26 * _inl_v26;
__t81 = _inl_v27 * _inl_v27;
__t82 = sqrt_newton(__t80 + __t81);
__t83 = __t79 / __t82;
_inl_v33 = _inl_v33 - __t83;
_inl_v26 = _inl_v14 - _inl_v9;
_inl_v27 = _inl_v15 - _inl_v10;
__t84 = _inl_v2 * _inl_v13;
__t85 = __t84 * _inl_v18;
__t86 = _inl_v26 * _inl_v26;
__t87 = _inl_v27 * _inl_v27;
__t88 = sqrt_newton(__t86 + __t87);
__t89 = __t85 / __t88;
_inl_v33 = _inl_v33 - __t89;
__t90 = _inl_v32 + _inl_v33;
e = __t90;
print e;
